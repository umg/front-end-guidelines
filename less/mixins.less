// Mixins
// -------------------------

// Clearfix
.clearfix {
    *zoom: 1;
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

// Image replacement
.ir {
    border: 0;
    font: 0/0 a;
    text-shadow: none;
    color: transparent;
    background-color: transparent;
}

// Hide from both screenreaders and browsers
.hidden {
    display: none !important;
    visibility: hidden;
}

// Hide visually, but have available for screenreaders
.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;

    &.focusable:active,
    &.focusable:focus {
        clip: auto;
        height: auto;
        margin: 0;
        overflow: visible;
        position: static;
        width: auto;
    }
}

// Hide visually and from screenreaders, but maintain layout
.invisible {
    visibility: hidden;
}

// CSS3 Properties
// -------------------------

// Border Radius
.border-radius(@radius) {
    -webkit-border-radius: @radius;
       -moz-border-radius: @radius;
            border-radius: @radius;
}

// Drop shadows
.box-shadow(@shadow) {
    -webkit-box-shadow: @shadow;
       -moz-box-shadow: @shadow;
            box-shadow: @shadow;
}

// Transitions
.transition(@transition) {
    -webkit-transition: @transition;
       -moz-transition: @transition;
        -ms-transition: @transition;
         -o-transition: @transition;
            transition: @transition;
}

// Opacity
.opacity(@opacity) {
    opacity: @opacity / 100;
    filter: ~"alpha(opacity=@{opacity})";
}

// Backgrounds
// -------------------------

// Add an alphatransparency value to any background or border color
#translucent {
    .background(@color: @white, @alpha: 1) {
        background-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
    }
    .border(@color: @white, @alpha: 1) {
        border-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
        .background-clip(padding-box);
    }
}

// Gradient Bar Colors for buttons and alerts
.gradientBar(@primaryColor, @secondaryColor) {
    #gradient > .vertical(@primaryColor, @secondaryColor);
    border-color: @secondaryColor @secondaryColor darken(@secondaryColor, 15%);
    border-color: rgba(0,0,0,.1) rgba(0,0,0,.1) fadein(rgba(0,0,0,.1), 15%);
}

// Gradients
#gradient {
    .horizontal(@startColor: #555, @endColor: #333) {
        background-color: @endColor;
        background-image: -moz-linear-gradient(left, @startColor, @endColor);
        background-image: -ms-linear-gradient(left, @startColor, @endColor);
        background-image: -webkit-gradient(linear, 0 0, 100% 0, from(@startColor), to(@endColor));
        background-image: -webkit-linear-gradient(left, @startColor, @endColor);
        background-image: -o-linear-gradient(left, @startColor, @endColor);
        background-image: linear-gradient(left, @startColor, @endColor);
        background-repeat: repeat-x;
        filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)",@startColor,@endColor));
    }
    .vertical(@startColor: #555, @endColor: #333) {
        background-color: mix(@startColor, @endColor, 60%);
        background-image: -moz-linear-gradient(top, @startColor, @endColor);
        background-image: -ms-linear-gradient(top, @startColor, @endColor);
        background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), to(@endColor));
        background-image: -webkit-linear-gradient(top, @startColor, @endColor);
        background-image: -o-linear-gradient(top, @startColor, @endColor);
        background-image: linear-gradient(top, @startColor, @endColor);
        background-repeat: repeat-x;
        filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@startColor,@endColor));
    }
    .directional(@startColor: #555, @endColor: #333, @deg: 45deg) {
        background-color: @endColor;
        background-repeat: repeat-x;
        background-image: -moz-linear-gradient(@deg, @startColor, @endColor);
        background-image: -ms-linear-gradient(@deg, @startColor, @endColor);
        background-image: -webkit-linear-gradient(@deg, @startColor, @endColor);
        background-image: -o-linear-gradient(@deg, @startColor, @endColor);
        background-image: linear-gradient(@deg, @startColor, @endColor);
    }
    .vertical-three-colors(@startColor: #00b3ee, @midColor: #7a43b6, @colorStop: 50%, @endColor: #c3325f) {
        background-color: mix(@midColor, @endColor, 80%);
        background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), color-stop(@colorStop, @midColor), to(@endColor));
        background-image: -webkit-linear-gradient(@startColor, @midColor @colorStop, @endColor);
        background-image: -moz-linear-gradient(top, @startColor, @midColor @colorStop, @endColor);
        background-image: -ms-linear-gradient(@startColor, @midColor @colorStop, @endColor);
        background-image: -o-linear-gradient(@startColor, @midColor @colorStop, @endColor);
        background-image: linear-gradient(@startColor, @midColor @colorStop, @endColor);
        background-repeat: no-repeat;
        filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@startColor,@endColor));
    }
    .radial(@innerColor: #555, @outerColor: #333)  {
        background-color: @outerColor;
        background-image: -webkit-gradient(radial, center center, 0, center center, 460, from(@innerColor), to(@outerColor));
        background-image: -webkit-radial-gradient(circle, @innerColor, @outerColor);
        background-image: -moz-radial-gradient(circle, @innerColor, @outerColor);
        background-image: -ms-radial-gradient(circle, @innerColor, @outerColor);
        background-image: -o-radial-gradient(circle, @innerColor, @outerColor);
        background-repeat: no-repeat;
    }
}

// Button backgrounds
// ------------------
.buttonBackground(@startColor, @endColor) {
    .gradientBar(@startColor, @endColor);
    .reset-filter();

    &:hover,
    &:active,
    &.active,
    &.disabled,
    &[disabled] {
        background-color: @endColor;
    }

    &:active,
    &.active {
        background-color: darken(@endColor, 10%) e("\9");
    }
}
